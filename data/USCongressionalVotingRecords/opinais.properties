# Set of possible types (classes)
types=Republican,Democrat

# Reader which will retrieve the items from the input source.
# (Must be located in es.uc3m.baldo.opinais.ir.readers).
reader=VotingRecordsReader

# Factory which will process and convert the items to individuals.
# (Must be located in es.uc3m.baldo.opinais.ir)
factory=VotingRecordIndividualsFactory

# Source file with individuals.
inputFile=data/USCongressionalVotingRecords/records.txt

# Maximum number of individuals. 0 means all.
individualsSize=0

# Is the number of individuals for each type balanced?
# Balancing is only done when it is possible.
isBalanced=false

# Size of the population of detectors.
speciesSize=500

# Length of the features vector.
featuresLength=16

# Preprocessors to be applied to the input individuals, in the order to be applied.
# If no preprocessors need to be executed, this parameter must be commented out.
#preprocessors=

# Percentage of the individuals to be used in the test set.
# This value must be expressed as a fraction (e.g. 0.1 = 10%).
testPct=0.3

# Name of the algorithm to be used.
# (Must be located in es.uc3m.baldo.opinais.core.algorithms)
algorithm=EvolutionaryAlgorithm

# Types of the arguments required by the constructor of the algorithm.
# (Only Integer, Double, Boolean and String types are allowed.)
algorithmTypes=Integer,Double,Double,Double,Double,Double,Integer

# The arguments to be passed to the constructor of the algorithm.
# The name must be the same that the keys of the properties in this file.
algorithmParameters=speciesSize,typeBias,generalityBias,crossoverRate,mutationRate,elitism,maxGenerations

# Probability that the detector detects SELF individuals.
# This value must be expressed as a fraction (e.g. 0.1 = 10%).
# (Not used) When dynamic types were implemented, this feature was removed.
typeBias=0.5

# Probability that a bit in the detector schema is initialized as a wildcard.
# This value must be expressed as a fraction (e.g. 0.1 = 10%).
generalityBias=0.5

# Probability that a pair of detectors reproduce to a new detector using crossover.
# This value must be expressed as a fraction (e.g. 0.1 = 10%).
crossoverRate=0.6

# Probability that a single bit in the detector threshold or schema is mutated.
# This value must be expressed as a fraction (e.g. 0.1 = 10%).
mutationRate=0.01

# Level of elitism, i.e., percentage of the best individuals to be maintained across generations.
# This value must be expressed as a fraction (e.g. 0.1 = 10%).
elitism=0.01

# Whether the cooperative fitness function must penalize the case where the individual remains 
# unclassified, or just ignore it.
penalizeUnclassified=true;

# Maximum number of generations. 0 means unlimited (must not be used, as implies an infinite loop).
maxGenerations=1000